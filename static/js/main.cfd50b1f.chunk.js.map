{"version":3,"sources":["App.js","index.js"],"names":["App","state","students","popup","name","rating","isSortedBy","togglePopUp","setState","addStudent","id","uuidv1","sortBy","field","reverse","sort","a","b","localeCompare","this","className","type","onClick","value","onChange","event","target","placeholder","min","max","trim","length","map","student","index","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sQAiKeA,G,iNA5JbC,MAAQ,CACNC,SAAU,GACVC,OAAO,EACPC,KAAM,GACNC,OAAQ,GACRC,WAAY,M,EAGdC,YAAc,WACZ,EAAKC,UAAS,SAAAP,GAAK,MAAK,CACtBE,OAAQF,EAAME,W,EAIlBM,WAAa,WACX,EAAKD,UAAS,SAAAP,GAAK,MAAK,CACtBC,SAAS,GAAD,mBACHD,EAAMC,UADH,CAEN,CACEQ,GAAIC,cACJP,KAAMH,EAAMG,KACZC,QAASJ,EAAMI,UAGnBD,KAAM,GACNC,OAAQ,OAGV,EAAKE,e,EAGPK,OAAS,SAAAC,GACP,GAAIA,IAAU,EAAKZ,MAAMK,WACvB,EAAKE,UAAS,SAAAP,GAAK,MAAK,CAAEC,SAAU,YAAID,EAAMC,UAAUY,kBACnD,CACL,OAAQD,GACN,IAAK,OACH,EAAKL,UAAS,SAAAP,GAAK,MAAK,CACtBC,SAAU,YAAID,EAAMC,UAAUa,MAAK,SAACC,EAAGC,GAAJ,OACjCD,EAAEZ,KAAKc,cAAcD,EAAEb,aAG3B,MACF,IAAK,SACH,EAAKI,UAAS,SAAAP,GAAK,MAAK,CACtBC,SAAU,YAAID,EAAMC,UAAUa,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEX,OAASY,EAAEZ,cAE5D,MACF,QACE,EAAKG,UAAS,SAAAP,GAAK,MAAK,CACtBC,SAAU,YAAID,EAAMC,UAAUa,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEN,GAAKO,EAAEP,UAG5D,EAAKF,SAAS,CAAEF,WAAYO,M,wEAItB,IAAD,SACmCM,KAAKlB,MAAvCC,EADD,EACCA,SAAUC,EADX,EACWA,MAAOC,EADlB,EACkBA,KAAMC,EADxB,EACwBA,OAE/B,OACE,yBAAKe,UAAU,OACb,yDACA,4BAAQC,KAAK,SAASD,UAAU,MAAME,QAASH,KAAKZ,aAApD,yFAGA,6BAECJ,GACC,yBAAKiB,UAAU,SACb,yBAAKA,UAAU,eACb,4BACEC,KAAK,SACLD,UAAU,mBACVE,QAASH,KAAKZ,aAHhB,8CAOA,qHACA,6BACE,sJAEE,2BACEc,KAAK,OACLE,MAAOnB,EACPoB,SAAU,SAAAC,GAAK,OACb,EAAKjB,SAAS,CAAEJ,KAAMqB,EAAMC,OAAOH,SAErCI,YAAY,qEAIlB,6BACE,4JAEE,2BACEN,KAAK,SACLO,IAAI,IACJC,IAAI,MACJN,MAAOlB,EACPmB,SAAU,SAAAC,GAAK,OACb,EAAKjB,SAAS,CAAEH,OAAQoB,EAAMC,OAAOH,SAEvCI,YAAY,wDAGfvB,EAAK0B,QAAUzB,GAAUA,GAAU,GAAKA,GAAU,KACjD,4BACEgB,KAAK,SACLD,UAAU,MACVE,QAASH,KAAKV,YAHhB,oGAaPP,EAAS6B,QACV,2BAAOX,UAAU,oBACf,+BACE,4BACE,oDACA,4BACE,0BAAMA,UAAU,OAAOE,QAAS,kBAAM,EAAKV,OAAO,UAAlD,mEAIF,4BACE,0BAAMQ,UAAU,OAAOE,QAAS,kBAAM,EAAKV,OAAO,YAC/C,IADH,iDAON,+BACGV,EAAS8B,KAAI,SAACC,EAASC,GAAV,OACZ,wBAAIC,IAAKF,EAAQvB,IACf,4BAAKwB,EAAQ,GACb,4BAAKD,EAAQ7B,MACb,4BAAK6B,EAAQ5B,eAOrBH,EAAS6B,QAAU,2H,GAvJXK,IAAMC,YCCxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.cfd50b1f.chunk.js","sourcesContent":["import React from \"react\";\nimport { v1 as uuidv1 } from \"uuid\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    students: [],\n    popup: false,\n    name: \"\",\n    rating: \"\",\n    isSortedBy: null\n  };\n\n  togglePopUp = () => {\n    this.setState(state => ({\n      popup: !state.popup\n    }));\n  };\n\n  addStudent = () => {\n    this.setState(state => ({\n      students: [\n        ...state.students,\n        {\n          id: uuidv1(),\n          name: state.name,\n          rating: +state.rating\n        }\n      ],\n      name: \"\",\n      rating: \"\"\n    }));\n\n    this.togglePopUp();\n  };\n\n  sortBy = field => {\n    if (field === this.state.isSortedBy) {\n      this.setState(state => ({ students: [...state.students].reverse() }));\n    } else {\n      switch (field) {\n        case \"name\":\n          this.setState(state => ({\n            students: [...state.students].sort((a, b) =>\n              a.name.localeCompare(b.name)\n            )\n          }));\n          break;\n        case \"rating\":\n          this.setState(state => ({\n            students: [...state.students].sort((a, b) => a.rating - b.rating)\n          }));\n          break;\n        default:\n          this.setState(state => ({\n            students: [...state.students].sort((a, b) => a.id - b.id)\n          }));\n      }\n      this.setState({ isSortedBy: field });\n    }\n  };\n\n  render() {\n    const { students, popup, name, rating } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>TATL Technology test task</h1>\n        <button type=\"button\" className=\"btn\" onClick={this.togglePopUp}>\n          Добавить запись\n        </button>\n        <hr />\n\n        {popup && (\n          <div className=\"popup\">\n            <div className=\"popup_inner\">\n              <button\n                type=\"button\"\n                className=\"btn red darken-4\"\n                onClick={this.togglePopUp}\n              >\n                Закрыть\n              </button>\n              <h4>Добавить запись</h4>\n              <div>\n                <label>\n                  Введите фамилию и имя:&nbsp;\n                  <input\n                    type=\"text\"\n                    value={name}\n                    onChange={event =>\n                      this.setState({ name: event.target.value })\n                    }\n                    placeholder=\"Фамилия, Имя\"\n                  />\n                </label>\n              </div>\n              <div>\n                <label>\n                  Введите рейтинг от 0 до 100:&nbsp;\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    max=\"100\"\n                    value={rating}\n                    onChange={event =>\n                      this.setState({ rating: event.target.value })\n                    }\n                    placeholder=\"Рейтинг (0-100)\"\n                  />\n                </label>\n                {name.trim() && rating && rating >= 0 && rating <= 100 && (\n                  <button\n                    type=\"button\"\n                    className=\"btn\"\n                    onClick={this.addStudent}\n                  >\n                    Добавить рейтинг\n                  </button>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {!!students.length && (\n          <table className=\"centered striped\">\n            <thead>\n              <tr>\n                <th>№ п/п</th>\n                <th>\n                  <span className=\"sort\" onClick={() => this.sortBy(\"name\")}>\n                    Фамилия, Имя\n                  </span>\n                </th>\n                <th>\n                  <span className=\"sort\" onClick={() => this.sortBy(\"rating\")}>\n                    {\" \"}\n                    Рейтинг\n                  </span>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {students.map((student, index) => (\n                <tr key={student.id}>\n                  <td>{index + 1}</td>\n                  <td>{student.name}</td>\n                  <td>{student.rating}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n\n        {!students.length && <h4>Пока записей нет</h4>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}